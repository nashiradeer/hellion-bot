stages:
  - lint
  - build

npm-lint:
  image: node:18-alpine
  stage: lint
  before_script:
    - apk -U upgrade
    - apk add make libtool autoconf automake gcc g++ libc-dev python3
    - npm i -g npm
    - npm ci
  script:
    - npm run lint
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - .eslintrc.cjs
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      exists:
        - .eslintrc.cjs
    - when: never

docker-build:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  tags:
    - docker
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=":latest"
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = $tag"
      elif [[ -z "$CI_COMMIT_TAG" ]]; then
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      else
        tag=":${CI_COMMIT_TAG:1}"
        echo "Running on tag '$CI_COMMIT_TAG': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      exists:
        - Dockerfile
    - if: $CI_COMMIT_TAG
      exists:
        - Dockerfile
    - when: never
